- find_product = Product.find(params[:product_id])
- find_category = Category.find(find_product.category_id)
= render "hlebBar", {arr_links: [{title: "Главная", url: "/"}, {title: find_category.first_name, url: "/category/#{find_category.id}"}, {title: find_product.title, url: "/category/#{find_product.id}"}]}
.content.content-block__normal
  = render "sort_by_price"
  .productTags
    - all_tags = ApiHookahStock.products(params[:product_id], "/find_tags", {api_key: current_api_key})
    - if params[:tag_id].present?
      a.tag href="/products/#{params[:product_id]}" Все
    - all_tags.each do |tag|
      - add_url = params[:price].present? ? "?price[from]=#{params[:price][:from]}&price[to]=#{params[:price][:to]}&tag_id=#{tag['id']}" : "?tag_id=#{tag['id']}"
      a.tag href="/products/#{params[:product_id]}#{add_url}" class=(params[:tag_id].to_i == tag['id'].to_i ? "select" : "")
        = tag["title"]
  .orderSortItems
    span Сортировать по:
    select.js_selectOrderItems
      option selected=(params[:sort] == "title" ? "selected" : false) value="title" По алфавиту А-Я
      option selected=(params[:sort] == "titleASC" ? "selected" : false) value="titleASC" По алфавиту Я-А
      option selected=(params[:sort] == "price" ? "selected" : false) value="price" Сначала дешевые
      option selected=(params[:sort] == "priceASC" ? "selected" : false) value="priceASC" Сначала дорогие
  .fullDevics
    - @items.each do |item| 
      - if item.count > 0 || item.in_stock 
        = render "item_block", {item: item}